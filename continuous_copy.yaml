name: nameApp
version: 0.0.1
port: 9184
vars:
  domain: localhost
  port: 4000
  databaseHost: localhost
  databasePort: 3306
  databaseName: mha
  databaseUser: root
  databasePass: root
  workDir: ./mhaServer
  serviceDir: ./fakeServicesDir
jobs:
  - createService:
    - cmd: if [ -f {serviceDir}/continuous.service ] ; then echo 1 ; else echo 0 ; fi
    - if:
      type: equal
      value: 0
      jobs:
        - cmd: sudo systemctl stop continuous
        - cmd: touch continuous.service
        - cmd: |
            echo '
              [Unit]
              Description=instance to serve api
              After=network.target
              [Service]
              User=root
              Group=root
              ExecStart={workDir}/continuous
              [Install]
              WantedBy=multi-user.target
            ' > continuous.service
        - cmd: mv continuous.service {serviceDir}/continuous.service
        - cmd: sudo systemctl daemon-reload;
        - cmd: sudo systemctl enable continuous.service
        - cmd: sudo systemctl start continuous
        - stop: true
  - cloneRepo:
    - cmd: git clone -b master https://tufik_chediak:ATBBfTrSHKGTHDQMNwWBLsYBVAnaC774C627@bitbucket.org/refinedrisk/risk-mental-health-app.git {workDir}
  - checkUpdates:
    - loop:
      # repeat: 2                               # remove to infinity loop
      sleepTime: 10000                        # milliseconds
      jobs:
        - cmd: git -C {workDir} pull
        - if:
          type: contain!
          value: Already up to date
          jobs:
            - updateDB:
              - cmd: if [ -f ${workDir}/db/migration/config.env ] ; then echo 1 ; else echo 0 ; fi
              - if:
                  type: equal
                  value: 0
                  jobs:
                    - cmd: touch ${workDir}/db/migration/config.env
                    - cmd: |
                       echo '
                        DB_HOST = ${databaseHost}
                        DB_PORT = ${databasePort}
                        DB_NAME = ${databaseName}
                        DB_USER = ${databaseUser}
                        DB_PASSWORD = ${databasePass}
                        FILES_PATH = sqlFiles/
                        FILES_SORT = UPDATE_DATE_ASC
                       ' > ${workDir}/db/migration/config.env
                    - cmd: ${workDir}/db/migration/migration-linux-amd64
            - updateServer:
              - cmd: sudo systemctl stop continuous
              - cmd: touch ${workDir}/server/config.js
              - cmd: |
                  echo '
                   export const config = {
                      version:'0.0.1',
                      environment:'L',
                      domain:'localhost',
                      port:4000,
                      databaseHost:'${databaseHost}',
                      databasePort:'${databasePort}',
                      databaseName:'${databaseName}',
                      databaseUser:'${databaseUser}',
                      databasePass:'${databasePass}',
                    }
                  ' > ${workDir}/db/migration/config.env
              - replace:
                file: ${workDir}/server/config.js
                match: databaseHost:'localhost'
                to: databaseHost:'${databaseHost}'
              - replace: --file=${workDir}/server/config.js --match=databasePort:'3306' --to=databasePort:'${databasePort}'
              - replace: --file=${workDir}/server/config.js --match=databaseName:'mha' --to=databaseName:'${databaseName}'
              - replace: --file=${workDir}/server/config.js --match=databaseUser:'root' --to=databaseUser:'${databaseUser}'
              - replace: --file=${workDir}/server/config.js --match=databasePass:'root' --to=databasePass:'${databasePass}'
              - replace: --file=${workDir}/server/config.js --match=databaseHost:'localhost' --to=databaseHost:'${databaseHost}'
              - cmd: sudo systemctl start continuous